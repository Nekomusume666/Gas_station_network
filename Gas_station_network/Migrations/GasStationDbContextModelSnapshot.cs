// <auto-generated />
using System;
using Gas_station_network.DataBase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gasstationnetwork.Migrations
{
    [DbContext(typeof(GasStationDbContext))]
    partial class GasStationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Gas_station_network.Model.Column", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GasStationID")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NameFuel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<double>("PriceFuel")
                        .HasColumnType("REAL");

                    b.Property<int>("VolumeFuel")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("GasStationID");

                    b.ToTable("Column");
                });

            modelBuilder.Entity("Gas_station_network.Model.GasStation", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("GasStations");
                });

            modelBuilder.Entity("Gas_station_network.Model.Column", b =>
                {
                    b.HasOne("Gas_station_network.Model.GasStation", null)
                        .WithMany("Columns")
                        .HasForeignKey("GasStationID");
                });

            modelBuilder.Entity("Gas_station_network.Model.GasStation", b =>
                {
                    b.Navigation("Columns");
                });
#pragma warning restore 612, 618
        }
    }
}
